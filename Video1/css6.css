
/*复习
一、复习
a标签的伪类4个：
a:link	没有被点击过的链接
a:visited	访问过的链接
a:hover	悬停
a:active	按下鼠标不松手
顺序就是“love hate”准则。
可以简写：


background系列属性，CSS2.1层面


background-color:red;
颜色表示法：red、rgb(255,0,0)、#ff0000、#f00
rgb和十六进制颜色是一样多的，是一一对应的。有换算关系。

background-image:url(images/1.jpg);
默认是平铺的。

background-repeat:no-repeat;
 	重复横向： repeat-x;
重复纵向： repeat-y;
不重复：	no-repeat;

*/


/*
二、相对定位
定位有三种，分别是相对定位、绝对定位、固定定位。
相对定位：
position:relative;
绝对定位：
position:absolute;
固定定位：
position:fixed;


2.2 不脱标，老家留坑，形影分离
相对定位不脱标，真实位置是在老家，只不过影子出去了，可以到处飘。

2.3 相对定位用途
相对定位有坑，所以一般不用于做“压盖”效果。页面中，效果极小。就两个作用：
1） 微调元素
2） 做绝对定位的参考，子绝父相（讲绝对定位的时候说）

2.4 相对定位的定位值
可以用left、right来描述盒子右、左的移动；
可以用top、bottom来描述盒子的下、上的移动。
*/

/** {*/
    /*margin: 0;*/
    /*padding: 0;*/
/*}*/

/*div {*/
    /*width: 200px;*/
    /*height: 200px;*/
/*}*/

/*.box1 {*/
    /*background-color: yellowgreen;*/
/*}*/
/*.box2 {*/
    /*background-color: skyblue;*/
    /*position: relative;*/
    /*left: 100px;*/
    /*top: 20px;*/
    /*border: 1px solid black;*/
/*}*/

/*.box3 {*/
    /*background-color: orange;*/
/*}*/



/*
三、绝对定位
绝对定位比相对定位更灵活。
3.1 绝对定位脱标
绝对定位的盒子，是脱离标准文档流的。所以，所有的标准文档流的性质，绝对定位之后都不遵守了。
绝对定位之后，标签就不区分所谓的行内元素、块级元素了，不需要display:block;就可以设置宽、高了：

3.2 参考点
绝对定位的参考点，如果用top描述，那么定位参考点就是页面的左上角，而不是浏览器的左上角：
如果用bottom描述，那么就是浏览器首屏窗口尺寸，对应的页面的左下角：


3.3 以盒子为参考点
一个绝对定位的元素，如果父辈元素中出现了也定位了的元素，那么将以父辈这个元素，为参考点。

● 要听最近的已经定位的祖先元素的，不一定是父亲，可能是爷爷：

● 不一定是相对定位，任何定位，都可以作为参考点

子绝父绝、子绝父相、子绝父固，都是可以给儿子定位的。但是，工程上子绝、父绝，没有一个盒子在标准流里面了
，所以页面就不稳固，没有任何实战用途。工程上，“子绝父相”有意义，父亲没有脱标，儿子脱标在父亲的范围里面移动。

● 绝对定位的儿子，无视参考的那个盒子的padding。
下图中，绿色部分是div的padding，蓝色部分是div的内容区域。那么此时，div相对定位，p绝对定位。
p将无视父亲的padding，在border内侧为参考点，进行定位：

3.4 绝对定位的盒子居中
绝对定位之后，所有标准流的规则，都不适用了。所以margin:0 auto;失效。
*/

* {
    margin: 0;
    padding: 0;
}

/*div {*/
    /*width: 200px;*/
    /*height: 200px;*/
/*}*/

/*.box1 {*/
    /*background-color: yellowgreen;*/
/*}*/
/*.box2 {*/
    /*background-color: skyblue;*/
    /*position: absolute;*/
    /*left: 100px;*/
    /*top: 20px;*/
    /*border: 1px solid black;*/
/*}*/

/*.box3 {*/
    /*background-color: orange;*/
/*}*/

/*span {*/
    /*position: absolute;*/
    /*top: 100px;*/
    /*left: 100px;*/
    /*width: 100px;*/
    /*height: 100px;*/
    /*background-color: pink;*/
/*}*/

/*div {*/
    /*width: 400px;*/
    /*height: 400px;*/
    /*border: 10px solid red;*/
    /*margin: 100px;*/
    /*position: relative;*/
/*}*/

/*.box1 {*/
    /*width: 400px;*/
    /*height: 400px;*/
    /*padding: 100px;*/
    /*padding-top: 150px;*/
    /*border: 10px solid red;*/
    /*margin: 100px;*/
    /*position: absolute;*/
/*}*/

/*.box2 {*/
    /*width: 300px;*/
    /*height: 300px;*/
    /*border: 50px solid black;*/
/*}*/

/*p {*/
    /*width: 100px;*/
    /*height: 100px;*/
    /*background-color: orange;*/
    /*position: absolute;*/
    /*top: 40px;*/
    /*left: 40px;*/
/*}*/

/*div {*/
    /*width: 400px;*/
    /*height: 60px;*/
    /*top: 100px;*/
    /*background-color: green;*/
    /*position: absolute;*/
    /*left: 50%;*/
    /*margin-left: -200px;*/
/*}*/


/*
 四、固定定位
固定定位，就是相对浏览器窗口定位。页面如何滚动，这个盒子显示的位置不变。
固定定位脱标！

*/

/*p {*/
    /*width: 100px;*/
    /*height: 100px;*/
    /*background-color: orange;*/
    /*position: fixed;*/
    /*top: 100px;*/
    /*left: 100px;*/
/*}*/

.backtop {
    position: fixed;
    bottom: 100px;
    right: 30px;
    width: 60px;
    height: 60px;
    background-color: gray;
    text-align: center;
    line-height: 30px;
    color: white;
    text-decoration: none;
}

body {
    padding-top: 60px;
}

.nav {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 60px;
    background-color: #333;
    z-index: 99999999;
}
.inner_c {
    width: 1000px;
    height: 60px;
    margin: 0 auto;
}

.inner_c ul {
    list-style: none;
}

.inner_c ul li {
    float: left;
    width: 100px;
    height: 60px;
    text-align: center;
    line-height: 60px;
}

.inner_c ul li a {
    display: block;
    width: 100px;
    height: 60px;
    text-decoration: none;
    color: white;
}

p {
    font-size: 30px;
}

.btn {
    display: block;
    width: 120px;
    height: 30px;
    background-color: orange;
    position: relative;
    top: 2px;
    left: 1px;
}


/*
五、z-index
● z-index值表示谁压着谁。数值大的压盖住数值小的。
● 只有定位了的元素，才能有z-index值。也就是说，不管相对定位、绝对定位、固定定位，都可以使用z-index值。而浮动的东西不能用。
● z-index值没有单位，就是一个正整数。默认的z-index值是0。
● 如果大家都没有z-index值，或者z-index值一样，那么谁写在HTML后面，谁在上面能压住别人。定位了的元素，永远能够压住没有定位的元素。
● 从父现象：父亲怂了，儿子再牛逼也没用。

*/